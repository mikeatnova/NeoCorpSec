@{
    ViewData["Title"] = "Camera List Page";
}

@model List<NeoCorpSec.Models.CameraManagement.Camera>

@{
    var locationMap = ViewBag.LocationMap as Dictionary<int, NeoCorpSec.Models.CameraManagement.Location>;
    var cameraStatusCounts = ViewBag.CameraStatusCounts as Dictionary<int, Dictionary<string, int>>;
    var cameraGroups = Model.GroupBy(camera => camera.LocationId); // O(N)
}

<div class="text-center">
    <h1 class="display-4">Camera List Page</h1>
</div>

<div>
    @if (TempData["ApiError"] != null)
    {
        <div class="alert alert-danger text-center text-dark">
            @TempData["ApiError"]
        </div>
    }
    @if (TempData["ApiMessage"] != null)
    {
        <div class="alert alert-success text-center text-dark">
            @TempData["ApiMessage"]
        </div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success text-center text-dark">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["FailureMessage"] != null)
    {
        <div class="alert alert-danger text-center text-dark">
            @TempData["FailureMessage"]
        </div>
    }
</div>


<div class="camera-list">
    @if (Model != null && Model.Count > 0)
    {
        @foreach (var cameraGroup in cameraGroups) // O(N)
        {
            <details class="camera-list-details">
                <summary class="location-list-summery">
                    <div>
                        <h4 class="location-list-header" style="display:inline;">
                            @{
                                var locationId = cameraGroup.Key;
                                if (ViewBag.LocationMap.ContainsKey(locationId)) // O(1)
                                {
                                    var location = ViewBag.LocationMap[locationId];
                                    @:@location.City, @location.State
                                }
                                else
                                {
                                    @:Unknown Location
                                }
                            }
                        </h4>
                        <span class="camera-count">(@cameraGroup.Count())</span>
                    <div>
                        <h4 class="location-list-address" style="display:inline;">
                            @{
                                if (ViewBag.LocationMap.ContainsKey(locationId)) // O(1), reusing locationId
                                {
                                    var location = ViewBag.locationMap[locationId];
                                    @:@location.Name, @location.City, @location.State
                                }
                                else
                                {
                                    @:Unknown Location
                                }
                            }
                        </h4>
                    </div>
                    </div>



                    <span class="status-block">
                        @{
                            string[] statuses = new[] { "Up", "Issues", "Down", "Decommissioned", "Unboxed" };
                            string[] imgSrcs = new[] { "/images/grncircle.png", "/images/warntriangle.png", "/images/redcircle.png", "/images/greycircle.png", "/images/unboxed.png" };

                            if (cameraStatusCounts.TryGetValue(locationId, out var statusCounts))
                            {
                                int count;
                                for (int i = 0; i < statuses.Length; i++)
                                {
                                    var status = statuses[i];
                                    var imgSrc = imgSrcs[i];
                                    var statusCount = statusCounts.TryGetValue(status, out count) ? count : 0;

                                    <span class="status-spacing status-container">
                                        <img class="status-image @(status.ToLower())-status" src="@imgSrc" alt="@status" />
                                        <span class="status-count">@statusCount</span>
                                    </span>
                                }
                            }
                        }
                    </span>
                </summary>
                <div class="camera-partial">
                    @foreach (var camera in cameraGroup) // O(N)
                    {
                        @await Html.PartialAsync("~/Views/Camera/_CameraPartial.cshtml", camera)
                        // O(1)
                    }
                </div>
            </details>
        }
    }
    else
    {
        <p>No cameras found.</p>
    }
</div>

